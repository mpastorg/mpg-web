pipeline {
  agent any
  stages {
    stage('Build pwd') {
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'personal_token', usernameVariable: 'USERNAME'
          , passwordVariable: 'PASSWORD')])
          {
            mypwd = "$PASSWORD"
          }
        }

      }
    }

    stage('Build image') {
      steps {
        script {
          dockerImage = docker.build("mpastorg/mpg-web:$RELEASE.$ENV.$BUILD_NUMBER",
          "-f ./dockerfile-pro/Dockerfile --build-arg SSH_PRIVATE_KEY=$mypwd .")
        }

      }
    }

    stage('Deploy Image') {
      steps {
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }

      }
    }

    stage('prepare for kubernetes') {
      steps {
        sh "sed 's/MPGRELEASE.MPGENV.MPGBUILD_NUMBER/$RELEASE.$ENV.$BUILD_NUMBER/' strava-nginx-deplo.yml > deplo_1.yml"
        sh 'sed \'s/MPGENV/default/\' deplo_1.yml > deplo_1b.yml'
        sh "sed 's/MPGHTTP_PORT/$MPGHTTP_PORT/' deplo_1b.yml > deplo_2c.yml"
        sh "sed 's/MPGHTTPS_PORT/$MPGHTTPS_PORT/' deplo_2c.yml > deplo_2d.yml"
      }
    }

    stage('SSH Into k8s Server') {
      steps {
        script {
          def remote = [:]
          remote.name = 'mpgubumac01'
          remote.host = 'mpgubumac01'
          remote.allowAnyHosts = true
          withCredentials([usernamePassword(credentialsId: 'mpgubumac01', usernameVariable: 'USERNAME'
          , passwordVariable: 'PASSWORD')])
          {
            remote.user = "$USERNAME"
            remote.password = "$PASSWORD"
            sshPut remote: remote, from: 'deplo_2d.yml', into: '.'
            sshCommand remote: remote, command: "kubectl apply -f deplo_2d.yml"
            sshRemove remote: remote, path: 'deplo_2d.yml'
          }
        }

      }
    }

  }
  environment {
    ENV = 'pro'
    MPGHTTP_PORT = 32509
    MPGHTTPS_PORT = 32506
    RELEASE = '0.5'
    registry = 'mpastorg/mpg-web'
    registryCredential = 'dockerhub'
    dockerImage = ''
  }
}